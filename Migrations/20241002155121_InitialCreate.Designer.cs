// <auto-generated />
using System.Collections.Generic;
using ComplexPropertyFromSql.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComplexPropertyFromSql.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20241002155121_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComplexPropertyFromSql.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("ReviewDay", "ComplexPropertyFromSql.Data.Entities.Employee.ReviewDay#DayInYear", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Day")
                                .HasColumnType("int")
                                .HasColumnName("DayInYearDay");

                            b1.Property<int>("Month")
                                .HasColumnType("int")
                                .HasColumnName("DayInYearMonth");
                        });

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
